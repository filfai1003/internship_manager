
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `InternshipRequest` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model InternshipRequest
 * 
 */
export type InternshipRequestModel = runtime.Types.Result.DefaultSelection<Prisma.$InternshipRequestPayload>

export type AggregateInternshipRequest = {
  _count: InternshipRequestCountAggregateOutputType | null
  _avg: InternshipRequestAvgAggregateOutputType | null
  _sum: InternshipRequestSumAggregateOutputType | null
  _min: InternshipRequestMinAggregateOutputType | null
  _max: InternshipRequestMaxAggregateOutputType | null
}

export type InternshipRequestAvgAggregateOutputType = {
  id: number | null
}

export type InternshipRequestSumAggregateOutputType = {
  id: number | null
}

export type InternshipRequestMinAggregateOutputType = {
  id: number | null
  lastName: string | null
  firstName: string | null
  email: string | null
  department: string | null
  startDate: Date | null
  endDate: Date | null
  status: string | null
  motivation: string | null
  createdAt: Date | null
}

export type InternshipRequestMaxAggregateOutputType = {
  id: number | null
  lastName: string | null
  firstName: string | null
  email: string | null
  department: string | null
  startDate: Date | null
  endDate: Date | null
  status: string | null
  motivation: string | null
  createdAt: Date | null
}

export type InternshipRequestCountAggregateOutputType = {
  id: number
  lastName: number
  firstName: number
  email: number
  department: number
  startDate: number
  endDate: number
  status: number
  motivation: number
  createdAt: number
  _all: number
}


export type InternshipRequestAvgAggregateInputType = {
  id?: true
}

export type InternshipRequestSumAggregateInputType = {
  id?: true
}

export type InternshipRequestMinAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  email?: true
  department?: true
  startDate?: true
  endDate?: true
  status?: true
  motivation?: true
  createdAt?: true
}

export type InternshipRequestMaxAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  email?: true
  department?: true
  startDate?: true
  endDate?: true
  status?: true
  motivation?: true
  createdAt?: true
}

export type InternshipRequestCountAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  email?: true
  department?: true
  startDate?: true
  endDate?: true
  status?: true
  motivation?: true
  createdAt?: true
  _all?: true
}

export type InternshipRequestAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InternshipRequest to aggregate.
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InternshipRequests to fetch.
   */
  orderBy?: Prisma.InternshipRequestOrderByWithRelationInput | Prisma.InternshipRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.InternshipRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InternshipRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InternshipRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned InternshipRequests
  **/
  _count?: true | InternshipRequestCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: InternshipRequestAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: InternshipRequestSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: InternshipRequestMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: InternshipRequestMaxAggregateInputType
}

export type GetInternshipRequestAggregateType<T extends InternshipRequestAggregateArgs> = {
      [P in keyof T & keyof AggregateInternshipRequest]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInternshipRequest[P]>
    : Prisma.GetScalarType<T[P], AggregateInternshipRequest[P]>
}




export type InternshipRequestGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InternshipRequestWhereInput
  orderBy?: Prisma.InternshipRequestOrderByWithAggregationInput | Prisma.InternshipRequestOrderByWithAggregationInput[]
  by: Prisma.InternshipRequestScalarFieldEnum[] | Prisma.InternshipRequestScalarFieldEnum
  having?: Prisma.InternshipRequestScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InternshipRequestCountAggregateInputType | true
  _avg?: InternshipRequestAvgAggregateInputType
  _sum?: InternshipRequestSumAggregateInputType
  _min?: InternshipRequestMinAggregateInputType
  _max?: InternshipRequestMaxAggregateInputType
}

export type InternshipRequestGroupByOutputType = {
  id: number
  lastName: string
  firstName: string
  email: string
  department: string
  startDate: Date
  endDate: Date
  status: string
  motivation: string | null
  createdAt: Date
  _count: InternshipRequestCountAggregateOutputType | null
  _avg: InternshipRequestAvgAggregateOutputType | null
  _sum: InternshipRequestSumAggregateOutputType | null
  _min: InternshipRequestMinAggregateOutputType | null
  _max: InternshipRequestMaxAggregateOutputType | null
}

type GetInternshipRequestGroupByPayload<T extends InternshipRequestGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InternshipRequestGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof InternshipRequestGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InternshipRequestGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InternshipRequestGroupByOutputType[P]>
      }
    >
  >



export type InternshipRequestWhereInput = {
  AND?: Prisma.InternshipRequestWhereInput | Prisma.InternshipRequestWhereInput[]
  OR?: Prisma.InternshipRequestWhereInput[]
  NOT?: Prisma.InternshipRequestWhereInput | Prisma.InternshipRequestWhereInput[]
  id?: Prisma.IntFilter<"InternshipRequest"> | number
  lastName?: Prisma.StringFilter<"InternshipRequest"> | string
  firstName?: Prisma.StringFilter<"InternshipRequest"> | string
  email?: Prisma.StringFilter<"InternshipRequest"> | string
  department?: Prisma.StringFilter<"InternshipRequest"> | string
  startDate?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
  endDate?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
  status?: Prisma.StringFilter<"InternshipRequest"> | string
  motivation?: Prisma.StringNullableFilter<"InternshipRequest"> | string | null
  createdAt?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
}

export type InternshipRequestOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  department?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  motivation?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type InternshipRequestWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.InternshipRequestWhereInput | Prisma.InternshipRequestWhereInput[]
  OR?: Prisma.InternshipRequestWhereInput[]
  NOT?: Prisma.InternshipRequestWhereInput | Prisma.InternshipRequestWhereInput[]
  lastName?: Prisma.StringFilter<"InternshipRequest"> | string
  firstName?: Prisma.StringFilter<"InternshipRequest"> | string
  email?: Prisma.StringFilter<"InternshipRequest"> | string
  department?: Prisma.StringFilter<"InternshipRequest"> | string
  startDate?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
  endDate?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
  status?: Prisma.StringFilter<"InternshipRequest"> | string
  motivation?: Prisma.StringNullableFilter<"InternshipRequest"> | string | null
  createdAt?: Prisma.DateTimeFilter<"InternshipRequest"> | Date | string
}, "id">

export type InternshipRequestOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  department?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  motivation?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.InternshipRequestCountOrderByAggregateInput
  _avg?: Prisma.InternshipRequestAvgOrderByAggregateInput
  _max?: Prisma.InternshipRequestMaxOrderByAggregateInput
  _min?: Prisma.InternshipRequestMinOrderByAggregateInput
  _sum?: Prisma.InternshipRequestSumOrderByAggregateInput
}

export type InternshipRequestScalarWhereWithAggregatesInput = {
  AND?: Prisma.InternshipRequestScalarWhereWithAggregatesInput | Prisma.InternshipRequestScalarWhereWithAggregatesInput[]
  OR?: Prisma.InternshipRequestScalarWhereWithAggregatesInput[]
  NOT?: Prisma.InternshipRequestScalarWhereWithAggregatesInput | Prisma.InternshipRequestScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"InternshipRequest"> | number
  lastName?: Prisma.StringWithAggregatesFilter<"InternshipRequest"> | string
  firstName?: Prisma.StringWithAggregatesFilter<"InternshipRequest"> | string
  email?: Prisma.StringWithAggregatesFilter<"InternshipRequest"> | string
  department?: Prisma.StringWithAggregatesFilter<"InternshipRequest"> | string
  startDate?: Prisma.DateTimeWithAggregatesFilter<"InternshipRequest"> | Date | string
  endDate?: Prisma.DateTimeWithAggregatesFilter<"InternshipRequest"> | Date | string
  status?: Prisma.StringWithAggregatesFilter<"InternshipRequest"> | string
  motivation?: Prisma.StringNullableWithAggregatesFilter<"InternshipRequest"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"InternshipRequest"> | Date | string
}

export type InternshipRequestCreateInput = {
  lastName: string
  firstName: string
  email: string
  department: string
  startDate: Date | string
  endDate: Date | string
  status?: string
  motivation?: string | null
  createdAt?: Date | string
}

export type InternshipRequestUncheckedCreateInput = {
  id?: number
  lastName: string
  firstName: string
  email: string
  department: string
  startDate: Date | string
  endDate: Date | string
  status?: string
  motivation?: string | null
  createdAt?: Date | string
}

export type InternshipRequestUpdateInput = {
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  motivation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InternshipRequestUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  motivation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InternshipRequestCreateManyInput = {
  id?: number
  lastName: string
  firstName: string
  email: string
  department: string
  startDate: Date | string
  endDate: Date | string
  status?: string
  motivation?: string | null
  createdAt?: Date | string
}

export type InternshipRequestUpdateManyMutationInput = {
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  motivation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InternshipRequestUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  motivation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InternshipRequestCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  department?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  motivation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type InternshipRequestAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type InternshipRequestMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  department?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  motivation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type InternshipRequestMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  department?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  motivation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type InternshipRequestSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}



export type InternshipRequestSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  email?: boolean
  department?: boolean
  startDate?: boolean
  endDate?: boolean
  status?: boolean
  motivation?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["internshipRequest"]>

export type InternshipRequestSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  email?: boolean
  department?: boolean
  startDate?: boolean
  endDate?: boolean
  status?: boolean
  motivation?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["internshipRequest"]>

export type InternshipRequestSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  email?: boolean
  department?: boolean
  startDate?: boolean
  endDate?: boolean
  status?: boolean
  motivation?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["internshipRequest"]>

export type InternshipRequestSelectScalar = {
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  email?: boolean
  department?: boolean
  startDate?: boolean
  endDate?: boolean
  status?: boolean
  motivation?: boolean
  createdAt?: boolean
}

export type InternshipRequestOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "lastName" | "firstName" | "email" | "department" | "startDate" | "endDate" | "status" | "motivation" | "createdAt", ExtArgs["result"]["internshipRequest"]>

export type $InternshipRequestPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "InternshipRequest"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    lastName: string
    firstName: string
    email: string
    department: string
    startDate: Date
    endDate: Date
    status: string
    motivation: string | null
    createdAt: Date
  }, ExtArgs["result"]["internshipRequest"]>
  composites: {}
}

export type InternshipRequestGetPayload<S extends boolean | null | undefined | InternshipRequestDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload, S>

export type InternshipRequestCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<InternshipRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: InternshipRequestCountAggregateInputType | true
  }

export interface InternshipRequestDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InternshipRequest'], meta: { name: 'InternshipRequest' } }
  /**
   * Find zero or one InternshipRequest that matches the filter.
   * @param {InternshipRequestFindUniqueArgs} args - Arguments to find a InternshipRequest
   * @example
   * // Get one InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InternshipRequestFindUniqueArgs>(args: Prisma.SelectSubset<T, InternshipRequestFindUniqueArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one InternshipRequest that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InternshipRequestFindUniqueOrThrowArgs} args - Arguments to find a InternshipRequest
   * @example
   * // Get one InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InternshipRequestFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, InternshipRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InternshipRequest that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestFindFirstArgs} args - Arguments to find a InternshipRequest
   * @example
   * // Get one InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InternshipRequestFindFirstArgs>(args?: Prisma.SelectSubset<T, InternshipRequestFindFirstArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InternshipRequest that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestFindFirstOrThrowArgs} args - Arguments to find a InternshipRequest
   * @example
   * // Get one InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InternshipRequestFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, InternshipRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more InternshipRequests that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InternshipRequests
   * const internshipRequests = await prisma.internshipRequest.findMany()
   * 
   * // Get first 10 InternshipRequests
   * const internshipRequests = await prisma.internshipRequest.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const internshipRequestWithIdOnly = await prisma.internshipRequest.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends InternshipRequestFindManyArgs>(args?: Prisma.SelectSubset<T, InternshipRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a InternshipRequest.
   * @param {InternshipRequestCreateArgs} args - Arguments to create a InternshipRequest.
   * @example
   * // Create one InternshipRequest
   * const InternshipRequest = await prisma.internshipRequest.create({
   *   data: {
   *     // ... data to create a InternshipRequest
   *   }
   * })
   * 
   */
  create<T extends InternshipRequestCreateArgs>(args: Prisma.SelectSubset<T, InternshipRequestCreateArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many InternshipRequests.
   * @param {InternshipRequestCreateManyArgs} args - Arguments to create many InternshipRequests.
   * @example
   * // Create many InternshipRequests
   * const internshipRequest = await prisma.internshipRequest.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends InternshipRequestCreateManyArgs>(args?: Prisma.SelectSubset<T, InternshipRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many InternshipRequests and returns the data saved in the database.
   * @param {InternshipRequestCreateManyAndReturnArgs} args - Arguments to create many InternshipRequests.
   * @example
   * // Create many InternshipRequests
   * const internshipRequest = await prisma.internshipRequest.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many InternshipRequests and only return the `id`
   * const internshipRequestWithIdOnly = await prisma.internshipRequest.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends InternshipRequestCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, InternshipRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a InternshipRequest.
   * @param {InternshipRequestDeleteArgs} args - Arguments to delete one InternshipRequest.
   * @example
   * // Delete one InternshipRequest
   * const InternshipRequest = await prisma.internshipRequest.delete({
   *   where: {
   *     // ... filter to delete one InternshipRequest
   *   }
   * })
   * 
   */
  delete<T extends InternshipRequestDeleteArgs>(args: Prisma.SelectSubset<T, InternshipRequestDeleteArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one InternshipRequest.
   * @param {InternshipRequestUpdateArgs} args - Arguments to update one InternshipRequest.
   * @example
   * // Update one InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends InternshipRequestUpdateArgs>(args: Prisma.SelectSubset<T, InternshipRequestUpdateArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more InternshipRequests.
   * @param {InternshipRequestDeleteManyArgs} args - Arguments to filter InternshipRequests to delete.
   * @example
   * // Delete a few InternshipRequests
   * const { count } = await prisma.internshipRequest.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends InternshipRequestDeleteManyArgs>(args?: Prisma.SelectSubset<T, InternshipRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InternshipRequests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InternshipRequests
   * const internshipRequest = await prisma.internshipRequest.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends InternshipRequestUpdateManyArgs>(args: Prisma.SelectSubset<T, InternshipRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InternshipRequests and returns the data updated in the database.
   * @param {InternshipRequestUpdateManyAndReturnArgs} args - Arguments to update many InternshipRequests.
   * @example
   * // Update many InternshipRequests
   * const internshipRequest = await prisma.internshipRequest.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more InternshipRequests and only return the `id`
   * const internshipRequestWithIdOnly = await prisma.internshipRequest.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends InternshipRequestUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, InternshipRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one InternshipRequest.
   * @param {InternshipRequestUpsertArgs} args - Arguments to update or create a InternshipRequest.
   * @example
   * // Update or create a InternshipRequest
   * const internshipRequest = await prisma.internshipRequest.upsert({
   *   create: {
   *     // ... data to create a InternshipRequest
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InternshipRequest we want to update
   *   }
   * })
   */
  upsert<T extends InternshipRequestUpsertArgs>(args: Prisma.SelectSubset<T, InternshipRequestUpsertArgs<ExtArgs>>): Prisma.Prisma__InternshipRequestClient<runtime.Types.Result.GetResult<Prisma.$InternshipRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of InternshipRequests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestCountArgs} args - Arguments to filter InternshipRequests to count.
   * @example
   * // Count the number of InternshipRequests
   * const count = await prisma.internshipRequest.count({
   *   where: {
   *     // ... the filter for the InternshipRequests we want to count
   *   }
   * })
  **/
  count<T extends InternshipRequestCountArgs>(
    args?: Prisma.Subset<T, InternshipRequestCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InternshipRequestCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a InternshipRequest.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends InternshipRequestAggregateArgs>(args: Prisma.Subset<T, InternshipRequestAggregateArgs>): Prisma.PrismaPromise<GetInternshipRequestAggregateType<T>>

  /**
   * Group by InternshipRequest.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternshipRequestGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends InternshipRequestGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InternshipRequestGroupByArgs['orderBy'] }
      : { orderBy?: InternshipRequestGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, InternshipRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInternshipRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the InternshipRequest model
 */
readonly fields: InternshipRequestFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InternshipRequest.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InternshipRequestClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the InternshipRequest model
 */
export interface InternshipRequestFieldRefs {
  readonly id: Prisma.FieldRef<"InternshipRequest", 'Int'>
  readonly lastName: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly firstName: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly email: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly department: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly startDate: Prisma.FieldRef<"InternshipRequest", 'DateTime'>
  readonly endDate: Prisma.FieldRef<"InternshipRequest", 'DateTime'>
  readonly status: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly motivation: Prisma.FieldRef<"InternshipRequest", 'String'>
  readonly createdAt: Prisma.FieldRef<"InternshipRequest", 'DateTime'>
}
    

// Custom InputTypes
/**
 * InternshipRequest findUnique
 */
export type InternshipRequestFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter, which InternshipRequest to fetch.
   */
  where: Prisma.InternshipRequestWhereUniqueInput
}

/**
 * InternshipRequest findUniqueOrThrow
 */
export type InternshipRequestFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter, which InternshipRequest to fetch.
   */
  where: Prisma.InternshipRequestWhereUniqueInput
}

/**
 * InternshipRequest findFirst
 */
export type InternshipRequestFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter, which InternshipRequest to fetch.
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InternshipRequests to fetch.
   */
  orderBy?: Prisma.InternshipRequestOrderByWithRelationInput | Prisma.InternshipRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InternshipRequests.
   */
  cursor?: Prisma.InternshipRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InternshipRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InternshipRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InternshipRequests.
   */
  distinct?: Prisma.InternshipRequestScalarFieldEnum | Prisma.InternshipRequestScalarFieldEnum[]
}

/**
 * InternshipRequest findFirstOrThrow
 */
export type InternshipRequestFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter, which InternshipRequest to fetch.
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InternshipRequests to fetch.
   */
  orderBy?: Prisma.InternshipRequestOrderByWithRelationInput | Prisma.InternshipRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InternshipRequests.
   */
  cursor?: Prisma.InternshipRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InternshipRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InternshipRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InternshipRequests.
   */
  distinct?: Prisma.InternshipRequestScalarFieldEnum | Prisma.InternshipRequestScalarFieldEnum[]
}

/**
 * InternshipRequest findMany
 */
export type InternshipRequestFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter, which InternshipRequests to fetch.
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InternshipRequests to fetch.
   */
  orderBy?: Prisma.InternshipRequestOrderByWithRelationInput | Prisma.InternshipRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing InternshipRequests.
   */
  cursor?: Prisma.InternshipRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InternshipRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InternshipRequests.
   */
  skip?: number
  distinct?: Prisma.InternshipRequestScalarFieldEnum | Prisma.InternshipRequestScalarFieldEnum[]
}

/**
 * InternshipRequest create
 */
export type InternshipRequestCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * The data needed to create a InternshipRequest.
   */
  data: Prisma.XOR<Prisma.InternshipRequestCreateInput, Prisma.InternshipRequestUncheckedCreateInput>
}

/**
 * InternshipRequest createMany
 */
export type InternshipRequestCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many InternshipRequests.
   */
  data: Prisma.InternshipRequestCreateManyInput | Prisma.InternshipRequestCreateManyInput[]
}

/**
 * InternshipRequest createManyAndReturn
 */
export type InternshipRequestCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * The data used to create many InternshipRequests.
   */
  data: Prisma.InternshipRequestCreateManyInput | Prisma.InternshipRequestCreateManyInput[]
}

/**
 * InternshipRequest update
 */
export type InternshipRequestUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * The data needed to update a InternshipRequest.
   */
  data: Prisma.XOR<Prisma.InternshipRequestUpdateInput, Prisma.InternshipRequestUncheckedUpdateInput>
  /**
   * Choose, which InternshipRequest to update.
   */
  where: Prisma.InternshipRequestWhereUniqueInput
}

/**
 * InternshipRequest updateMany
 */
export type InternshipRequestUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update InternshipRequests.
   */
  data: Prisma.XOR<Prisma.InternshipRequestUpdateManyMutationInput, Prisma.InternshipRequestUncheckedUpdateManyInput>
  /**
   * Filter which InternshipRequests to update
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * Limit how many InternshipRequests to update.
   */
  limit?: number
}

/**
 * InternshipRequest updateManyAndReturn
 */
export type InternshipRequestUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * The data used to update InternshipRequests.
   */
  data: Prisma.XOR<Prisma.InternshipRequestUpdateManyMutationInput, Prisma.InternshipRequestUncheckedUpdateManyInput>
  /**
   * Filter which InternshipRequests to update
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * Limit how many InternshipRequests to update.
   */
  limit?: number
}

/**
 * InternshipRequest upsert
 */
export type InternshipRequestUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * The filter to search for the InternshipRequest to update in case it exists.
   */
  where: Prisma.InternshipRequestWhereUniqueInput
  /**
   * In case the InternshipRequest found by the `where` argument doesn't exist, create a new InternshipRequest with this data.
   */
  create: Prisma.XOR<Prisma.InternshipRequestCreateInput, Prisma.InternshipRequestUncheckedCreateInput>
  /**
   * In case the InternshipRequest was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InternshipRequestUpdateInput, Prisma.InternshipRequestUncheckedUpdateInput>
}

/**
 * InternshipRequest delete
 */
export type InternshipRequestDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
  /**
   * Filter which InternshipRequest to delete.
   */
  where: Prisma.InternshipRequestWhereUniqueInput
}

/**
 * InternshipRequest deleteMany
 */
export type InternshipRequestDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InternshipRequests to delete
   */
  where?: Prisma.InternshipRequestWhereInput
  /**
   * Limit how many InternshipRequests to delete.
   */
  limit?: number
}

/**
 * InternshipRequest without action
 */
export type InternshipRequestDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InternshipRequest
   */
  select?: Prisma.InternshipRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InternshipRequest
   */
  omit?: Prisma.InternshipRequestOmit<ExtArgs> | null
}
